/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package circuitikztool;

import java.util.ArrayList;
import javax.swing.JCheckBox;

/**
 *
 * @author James
 */
public class preferencesConfig extends javax.swing.JDialog {

    ArrayList<JCheckBox> checkBoxes = new ArrayList(0);

    /**
     * Creates new form preferencesConfig
     */
    public preferencesConfig(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        Preferences.importPreferences();
        setTitle("Preferences");

        getContentPane().setBackground(Preferences.themeBackgroundColor);
        panel.setBackground(Preferences.themeBackgroundColor);

        panel.setLayout(new java.awt.GridLayout(Preferences.getPreferences().length, 1));
        setSize(200, 30 * Preferences.getPreferences().length + 100);

        for (int a = 0; a < Preferences.getPreferences().length; a++) {

            if (Preferences.getPreferences()[a].type == preferenceOption.BOOLEAN) {
                checkBoxes.add(new JCheckBox(Preferences.getPreferences()[a].name, Preferences.getPreferences()[a].value.equals("true")));
//                this.add(checkBoxes.get(a));
                System.out.println(Preferences.getPreferences()[a].value);

                System.out.println("creating checkbox for " + Preferences.getPreferences()[a].name + "(" + Preferences.getPreferences()[a].toString() + ")");
                panel.add(checkBoxes.get(a));
                checkBoxes.get(a).setForeground(Preferences.themeText);
                checkBoxes.get(a).setBackground(Preferences.themeBackgroundColor);
                checkBoxes.get(a).setVisible(true);
            }

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        apply = new javax.swing.JButton();
        panel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        apply.setBackground(Preferences.themeAccent);
        apply.setForeground(Preferences.themeText);
        apply.setText("Apply and Close");
        apply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyActionPerformed(evt);
            }
        });

        panel.setBackground(Preferences.themeBackgroundColor);
        panel.setLayout(new java.awt.GridLayout(20, 1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(apply, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(apply)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void applyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyActionPerformed
        doClose();
    }//GEN-LAST:event_applyActionPerformed

    private void doClose() {
        for (int a = 0; a < Preferences.getPreferences().length; a++) {
            Preferences.setPreference(checkBoxes.get(a).getText(), (checkBoxes.get(a).isSelected()) ? "true" : "false");
        }
        Preferences.exportPreferences();
        Preferences.ConfigPrefrences();
        setVisible(false);
        dispose();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(preferencesConfig.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(preferencesConfig.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(preferencesConfig.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(preferencesConfig.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                preferencesConfig dialog = new preferencesConfig(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton apply;
    private javax.swing.JPanel panel;
    // End of variables declaration//GEN-END:variables
}
